// task#1
let a = 1, b = 1;

let c = ++a; 
let d = b++;

// переменная С покажет новое значение так как при присваивании нового значения префиксный декремент увеличит число на единицу - результат 2
// переменная D покажет старое значение так как постфиксный декремент сначала запишет значение а потом увеличит на единицу - результат 1
// переменные a и b покажут новые значения так как они переприсвоены - результат 2

console.log(a + "a", b +"b", c + "c", d + "d");

// task#2
let A = 2;
let x = 1 + (A *= 2);

// переменная A будет равна 4 так как выполнится умножение значания на 2 а потом значение переменной перезапишется на 4;
// в переменную х запишется 5 первой выполнится операция в скобках а потом операция прибавления; 

console.log(A + "A", x + "x");

// task#3
let stringResult = "" + 1 + 0;  /сложение со строкой приводит 1 к строке "" + 1 -> "1" + 0 -> "10" /
let numberResult = "" - 1 + 0; /вычитание приводит пустую строку к 0 -> -1 + 0 -> -1 /
let boolianResult = true + false; /булевое значение становится числом -> 0 + 1 -> 1/
let numbResult = 6 / "3"; /деление приводит строку к числу -> 6 : 3 -> 2/
let multResult = "2" * "3"; /умножение приводит строки к числу 2 х 3 -> 6/
let strResult = 4 + 5 + "px"; /конкатенация происходит слева направо сначала 4 + 5 -> 9 потом строка приводит все к строке 9 + "рх" -> "9рх"/
let strRes = "$" + 4 + 5; /"$45": конкатенация происходит слева направо сначала при первом сложении число становится строкой а потом строкой становится второе число/
let subResult = "4" - 2; /2: вычитание приводит значение к числу/
let nanResult = "4px" - 2; /операция вычитания со строками приводит к NaN/
let numbRes = "  -9  " + 5; /"-95": строка при сложение приводит все к строке/
let nRes = "  -9  " - 5; /-14: вычитание приводит все к числу/
let zeroNull = null + 1; /null становится 0 после численного преобразования -> 0 + 1 ->1/
let undResult = undefined + 1; /undefined становится NaN после численного преобразования/
let numberres = " \t \n" - 2; /-2: пробельные символы игнорируются и воспринимаются как пустая строка -> 0 - 2 -> -2/


// task#4
let o = +prompt("Первое число?", 1);
let f = +prompt("Второе число?", 2);

alert(o + f);

// результат выполнения prompt возвращает значение "строка" унарный + перед применением оператора приводит строки к числам 


// task#1

// 5 > 4 будет сравнение чисел -> true 
// "ананас" > "яблоко" строки сравниваются посимвольно в алфавитном порядке сравнение остановится на первых буквах слова "а" > "я" -> false
// "2" > "12" первый символ первой строки "2" больше, чем первый символ второй "1" -> true
// undefined == null при нестрогом равенстве эти значения равны друг другу ->  true
// undefined === null значения относятся к разным типам данных при строгом сравнении -> false
// null == "\n0\n" при нестрогом равенстве null равен только undefined -> false
// null === +"\n0\n" значения относятся к разным типам данных при строгом сравнении -> false